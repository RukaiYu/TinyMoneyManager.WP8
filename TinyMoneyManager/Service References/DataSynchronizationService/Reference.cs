//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.235
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace TinyMoneyManager.DataSynchronizationService
{
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DataSynchronizationActionOption", Namespace = "http://schemas.datacontract.org/2004/07/TinyMoneyManager.Service")]
    public enum DataSynchronizationActionOption : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cover = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Append = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DataSynchronizationArgs", Namespace = "http://codernet.net")]
    public partial class DataSynchronizationArgs : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string AccountItemListXmlSourceField;

        private string AppSettingsXmlSourceField;

        private string CategoryListXmlSourceField;

        private byte[] SdfFileContentFiled;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountItemListXmlSource
        {
            get
            {
                return this.AccountItemListXmlSourceField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AccountItemListXmlSourceField, value) != true))
                {
                    this.AccountItemListXmlSourceField = value;
                    this.RaisePropertyChanged("AccountItemListXmlSource");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppSettingsXmlSource
        {
            get
            {
                return this.AppSettingsXmlSourceField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AppSettingsXmlSourceField, value) != true))
                {
                    this.AppSettingsXmlSourceField = value;
                    this.RaisePropertyChanged("AppSettingsXmlSource");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryListXmlSource
        {
            get
            {
                return this.CategoryListXmlSourceField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CategoryListXmlSourceField, value) != true))
                {
                    this.CategoryListXmlSourceField = value;
                    this.RaisePropertyChanged("CategoryListXmlSource");
                }
            }
        }
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SdfFileContent
        {
            get
            {
                return this.SdfFileContentFiled;
            }
            set
            {
                if ((object.ReferenceEquals(this.SdfFileContentFiled, value) != true))
                {
                    this.SdfFileContentFiled = value;
                    this.RaisePropertyChanged("SdfFileContent");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "DataSynchronizationService.IDataSynchronizationService")]
    public interface IDataSynchronizationService
    {

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IDataSynchronizationService/GetData", ReplyAction = "http://tempuri.org/IDataSynchronizationService/GetDataResponse")]
        System.IAsyncResult BeginGetData(System.Guid userId, System.AsyncCallback callback, object asyncState);

        string EndGetData(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IDataSynchronizationService/Restore", ReplyAction = "http://tempuri.org/IDataSynchronizationService/RestoreResponse")]
        System.IAsyncResult BeginRestore(TinyMoneyManager.DataSynchronizationService.DataSynchronizationActionOption option, System.AsyncCallback callback, object asyncState);

        TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs EndRestore(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IDataSynchronizationService/Backup", ReplyAction = "http://tempuri.org/IDataSynchronizationService/BackupResponse")]
        System.IAsyncResult BeginBackup(TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs arg, System.AsyncCallback callback, object asyncState);

        bool EndBackup(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataSynchronizationServiceChannel : TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public RestoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public BackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public bool Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataSynchronizationServiceClient : System.ServiceModel.ClientBase<TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService>, TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService
    {

        private BeginOperationDelegate onBeginGetDataDelegate;

        private EndOperationDelegate onEndGetDataDelegate;

        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;

        private BeginOperationDelegate onBeginRestoreDelegate;

        private EndOperationDelegate onEndRestoreDelegate;

        private System.Threading.SendOrPostCallback onRestoreCompletedDelegate;

        private BeginOperationDelegate onBeginBackupDelegate;

        private EndOperationDelegate onEndBackupDelegate;

        private System.Threading.SendOrPostCallback onBackupCompletedDelegate;

        private BeginOperationDelegate onBeginOpenDelegate;

        private EndOperationDelegate onEndOpenDelegate;

        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

        private BeginOperationDelegate onBeginCloseDelegate;

        private EndOperationDelegate onEndCloseDelegate;

        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

        public DataSynchronizationServiceClient()
        {
        }

        public DataSynchronizationServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public DataSynchronizationServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public DataSynchronizationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public DataSynchronizationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }

        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;

        public event System.EventHandler<RestoreCompletedEventArgs> RestoreCompleted;

        public event System.EventHandler<BackupCompletedEventArgs> BackupCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService.BeginGetData(System.Guid userId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetData(userId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService.EndGetData(System.IAsyncResult result)
        {
            return base.Channel.EndGetData(result);
        }

        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            System.Guid userId = ((System.Guid)(inValues[0]));
            return ((TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService)(this)).BeginGetData(userId, callback, asyncState);
        }

        private object[] OnEndGetData(System.IAsyncResult result)
        {
            string retVal = ((TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }

        private void OnGetDataCompleted(object state)
        {
            if ((this.GetDataCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetDataAsync(System.Guid userId)
        {
            this.GetDataAsync(userId, null);
        }

        public void GetDataAsync(System.Guid userId, object userState)
        {
            if ((this.onBeginGetDataDelegate == null))
            {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null))
            {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null))
            {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        userId}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService.BeginRestore(TinyMoneyManager.DataSynchronizationService.DataSynchronizationActionOption option, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRestore(option, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService.EndRestore(System.IAsyncResult result)
        {
            return base.Channel.EndRestore(result);
        }

        private System.IAsyncResult OnBeginRestore(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TinyMoneyManager.DataSynchronizationService.DataSynchronizationActionOption option = ((TinyMoneyManager.DataSynchronizationService.DataSynchronizationActionOption)(inValues[0]));
            return ((TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService)(this)).BeginRestore(option, callback, asyncState);
        }

        private object[] OnEndRestore(System.IAsyncResult result)
        {
            TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs retVal = ((TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService)(this)).EndRestore(result);
            return new object[] {
                    retVal};
        }

        private void OnRestoreCompleted(object state)
        {
            if ((this.RestoreCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestoreCompleted(this, new RestoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void RestoreAsync(TinyMoneyManager.DataSynchronizationService.DataSynchronizationActionOption option)
        {
            this.RestoreAsync(option, null);
        }

        public void RestoreAsync(TinyMoneyManager.DataSynchronizationService.DataSynchronizationActionOption option, object userState)
        {
            if ((this.onBeginRestoreDelegate == null))
            {
                this.onBeginRestoreDelegate = new BeginOperationDelegate(this.OnBeginRestore);
            }
            if ((this.onEndRestoreDelegate == null))
            {
                this.onEndRestoreDelegate = new EndOperationDelegate(this.OnEndRestore);
            }
            if ((this.onRestoreCompletedDelegate == null))
            {
                this.onRestoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestoreCompleted);
            }
            base.InvokeAsync(this.onBeginRestoreDelegate, new object[] {
                        option}, this.onEndRestoreDelegate, this.onRestoreCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService.BeginBackup(TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs arg, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginBackup(arg, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService.EndBackup(System.IAsyncResult result)
        {
            return base.Channel.EndBackup(result);
        }

        private System.IAsyncResult OnBeginBackup(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs arg = ((TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs)(inValues[0]));
            return ((TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService)(this)).BeginBackup(arg, callback, asyncState);
        }

        private object[] OnEndBackup(System.IAsyncResult result)
        {
            bool retVal = ((TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService)(this)).EndBackup(result);
            return new object[] {
                    retVal};
        }

        private void OnBackupCompleted(object state)
        {
            if ((this.BackupCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BackupCompleted(this, new BackupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void BackupAsync(TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs arg)
        {
            this.BackupAsync(arg, null);
        }

        public void BackupAsync(TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs arg, object userState)
        {
            if ((this.onBeginBackupDelegate == null))
            {
                this.onBeginBackupDelegate = new BeginOperationDelegate(this.OnBeginBackup);
            }
            if ((this.onEndBackupDelegate == null))
            {
                this.onEndBackupDelegate = new EndOperationDelegate(this.OnEndBackup);
            }
            if ((this.onBackupCompletedDelegate == null))
            {
                this.onBackupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBackupCompleted);
            }
            base.InvokeAsync(this.onBeginBackupDelegate, new object[] {
                        arg}, this.onEndBackupDelegate, this.onBackupCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void OpenAsync()
        {
            this.OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null))
            {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null))
            {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null))
            {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CloseAsync()
        {
            this.CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null))
            {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null))
            {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null))
            {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }

        protected override TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService CreateChannel()
        {
            return new DataSynchronizationServiceClientChannel(this);
        }

        private class DataSynchronizationServiceClientChannel : ChannelBase<TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService>, TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService
        {

            public DataSynchronizationServiceClientChannel(System.ServiceModel.ClientBase<TinyMoneyManager.DataSynchronizationService.IDataSynchronizationService> client) :
                base(client)
            {
            }

            public System.IAsyncResult BeginGetData(System.Guid userId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }

            public string EndGetData(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                 string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginRestore(TinyMoneyManager.DataSynchronizationService.DataSynchronizationActionOption option, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = option;
                System.IAsyncResult _result = base.BeginInvoke("Restore", _args, callback, asyncState);
                return _result;
            }

            public TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs EndRestore(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs _result = ((TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs)(base.EndInvoke("Restore", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginBackup(TinyMoneyManager.DataSynchronizationService.DataSynchronizationArgs arg, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = arg;
                System.IAsyncResult _result = base.BeginInvoke("Backup", _args, callback, asyncState);
                return _result;
            }

            public bool EndBackup(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("Backup", _args, result)));
                return _result;
            }
        }
    }
}
